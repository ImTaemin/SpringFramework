<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="customAccessDenied" class="org.tmkim.security.CustomAccessDeniedHandler" />
    <bean id="customLoginSuccess" class="org.tmkim.security.CustomLoginSuccessHandler" />
<!--    <bean id="customPasswordEncoder" class="org.tmkim.security.CustomNoOpPasswordEncoder" />-->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    <bean id="customUserDetailsService" class="org.tmkim.security.CustomUserDetailsService" />

    <security:http>
        <security:intercept-url pattern="/sample/all" access="permitAll"/>
        <security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
        <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>

<!--        <security:form-login/>-->
<!--        <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/>-->

        <security:form-login login-page="/customLogin" />

        <security:access-denied-handler ref="customAccessDenied" />

        <security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/>

        <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
<!--            <security:jdbc-user-service data-source-ref="dataSource" />-->
<!--            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="SELECT userid, userpw, enabled FROM tbl_member WHERE userid=?"
                                        authorities-by-username-query="SELECT userid, auth FROM tbl_member_auth WHERE userid=?"/>-->

<!--            <security:password-encoder ref="customPasswordEncoder" />-->
            <security:password-encoder ref="bcryptPasswordEncoder" />
            <!--<security:user-service>
                <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
                <security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
            </security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>

</beans>